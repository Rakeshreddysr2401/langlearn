name: "PR Review with Reply on Bot-2"

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]

permissions: write-all

jobs:
  review-pr:
    if: |
      (github.event.issue.pull_request && (github.event.comment.in_reply_to_id != null || contains(github.event.comment.body, '/git-reply'))) ||
      (github.event_name == 'pull_request_review_comment')

    runs-on: ubuntu-latest

    steps:
      - name: Set Mode
        id: set_mode
        run: |
          if [[ "${{ github.event_name }}" == "pull_request_review_comment" ]]; then
            echo "mode=reply" >> $GITHUB_OUTPUT
            echo "Mode: Reply to review comment"
          else
            echo "mode=review" >> $GITHUB_OUTPUT
            echo "Mode: Manual review triggered"
          fi

      - name: Log PR Info
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Mode: ${{ steps.set_mode.outputs.mode }}"
          echo "PR Number: ${{ github.event.issue.number || github.event.pull_request.number }}"
          echo "Issue Number: ${{ github.event.issue.number }}"
          echo "Pull Number: ${{ github.event.pull_request }}"
          echo "Comment Body: ${{ github.event.comment.body }}"
          echo "Comment ID: ${{ github.event.comment.id }}"
          echo "Reply to ID: ${{ github.event.comment.in_reply_to_id }}"
          echo "Git Event: ${{ github.event }}"
          echo "Repository: ${{ github.repository }}"
          echo "Comment: ${{ github.event.comment.body }}"

      - name: Print full GitHub event JSON
        run: |
          echo "üîç Printing full GitHub event payload:"
          cat "$GITHUB_EVENT_PATH"

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ‚úÖ Add pip cache for faster dependency installs
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install --cache-dir ~/.cache/pip -r requirements.txt || true  # fallback in case of no requirements.txt

      - name: Run GitHub Reviewer Action
        uses: Rakeshreddysr2401/my-github-reviewer@ReviewReplyPromptConcise
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PULL_NUMBER: ${{ github.event.issue.number || github.event.pull_request.number }}
          REPOSITORY: ${{ github.repository }}
          EXCLUDE: "*.md,*.txt,package-lock.json,*.yml,*.yaml"
          USE_VECTORSTORE: "true"
          MAX_LOOP: "2"
          MODE: ${{ steps.set_mode.outputs.mode }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
